// Code generated by MockGen. DO NOT EDIT.
// Source: C:\dev\gin_app\domain\repository\user_information_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "gin_app/domain/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserInformationRepository is a mock of UserInformationRepository interface.
type MockUserInformationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserInformationRepositoryMockRecorder
}

// MockUserInformationRepositoryMockRecorder is the mock recorder for MockUserInformationRepository.
type MockUserInformationRepositoryMockRecorder struct {
	mock *MockUserInformationRepository
}

// NewMockUserInformationRepository creates a new mock instance.
func NewMockUserInformationRepository(ctrl *gomock.Controller) *MockUserInformationRepository {
	mock := &MockUserInformationRepository{ctrl: ctrl}
	mock.recorder = &MockUserInformationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInformationRepository) EXPECT() *MockUserInformationRepositoryMockRecorder {
	return m.recorder
}

// GetByUserInformation mocks base method.
func (m *MockUserInformationRepository) GetByUserInformation(Id string) (*model.UserInformation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserInformation", Id)
	ret0, _ := ret[0].(*model.UserInformation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserInformation indicates an expected call of GetByUserInformation.
func (mr *MockUserInformationRepositoryMockRecorder) GetByUserInformation(Id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserInformation", reflect.TypeOf((*MockUserInformationRepository)(nil).GetByUserInformation), Id)
}
